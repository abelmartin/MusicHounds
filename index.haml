!!!
%html{:xmlns => "http://www.w3.org/1999/xhtml"}
  %head
    %title Music Hounds
    %link{:href => "sp://import/css/eve.css", :rel => "stylesheet"}/
    %link{:href => "sp://import/css/shared.css", :rel => "stylesheet"}/
    %link{:href => "sp://import/css/api.css", :rel => "stylesheet"}/
  %body
    #header
      %h1 Music Hounds
      #notifcations
        spotify:app:musichounds
    #content
      #stage
        #CreateUser
          %button#btnCreateUser{:class => "new-button"} Create New User
        #CreateGame
          %h2 Create New Game
          .new_game_param
            %label Year
            %select#ngpYear
              %option{:value => 0} Any
          .new_game_param
            %label Artist
            %input#ngpArtist{:type => "text", :placeholder => "Any"}
          .new_game_param
            %label Dancibility
            / I'll be padding this by '5' on both sides when the API is called
            %input#ngpDance{:type => "range", :min => "5", :max => "95"}
          .new_game_param
            %label Hotness
            / I'll be padding this by '5' on both sides when the API is called
            %input#ngpHotness{:type => "range", :min => "5", :max => "95"}
          %button#btnCreateGame{:class => "new-button"} Create New Game
    #footer
      #powered
        Powered by EchoNest, Pusher & Spotify
      #creator
        Created by Abel Martin from Jingle Punks

    %script#TMPCreateGame{:type => "text/x-jquery-tmpl"}
      
    / -- [0] Required libraries
    %script{:src=>"sp:/js/req/jquery-1.7.1.min.js"}
    %script{:src=>"sp:/js/req/underscore-1.3.1.min.js"}
    %script{:src=>"sp:/js/req/mustache-0.4.2.js"}
    %script{:src=>"sp:/js/req/backbone-0.9.1.min.js"}
    %script{:src=>"sp:/js/req/pusher-1.11.min.js"}

    / -- [1] API Keys
    %script{:src=>"sp:/js/app/api_keys.js"}

    / -- [2] Models
    / -- [3] Collections
    / -- [4] Views
    / -- [5] Writers


    :javascript 
      $(function(){
        // Enable pusher logging - don't include this in production
        Pusher.log = function(message) {
          if (window.console && window.console.log) window.console.log(message);
        };

        // Flash fallback logging - don't include this in production
        //WEB_SOCKET_DEBUG = true;

        var pusher = new Pusher('f741395dd9ac3fcd542b');
        var channel = pusher.subscribe('test_channel');
        channel.bind('my_event', function(data) {
          <!--alert(data);-->
          $("#notifcations").html(data);
        });

        var sp = getSpotifyApi(1);
        var sp_models = sp.require('sp://import/scripts/api/models');
        if (localStorage.getItem("user_guid") == null){
          localStorage.setItem( "user_guid", guid() );
        }

        var u_guid = localStorage.getItem("user_guid");
        $("#notifcations").html( u_guid );

        $("#btnCreateUser").click( createUser );

      });

      //I got the GUID code from StackOverflow
      //http://stackoverflow.com/questions/7940616/what-makes-this-pseudo-guid-generator-better-than-math-random
      function S4() {
         return (((1+Math.random())*0x10000)|0).toString(16).substring(1);
      }

      function guid() {
         return (S4()+S4()+"-"+S4()+"-"+S4()+"-"+S4()+"-"+S4()+S4()+S4());
      }
      
      function createUser(){
        alert("within createUser call");
        var u_guid = localStorage.getItem("user_guid");
        $.ajax({
          // url: "http://amartin.local:3000/users/create",
          url: "http://mhbackend.heroku.com:3000/users",
          data: {
            user: {guid: u_guid}
          },
          type: "POST",
          success: function(){ alert("we got back data"); }
        });
      }
